---
import LabLayout from "../layouts/LabLayout.astro";
import ExperimentPanel from "src/components/ExperimentPanel.astro";
import "../styles/global.css";
---

<!-- All content here was debugged and tested for full functionality -->

<LabLayout title="Lab 7 ‚Äî Experiment Table">
  <h1 class="text-3xl font-bold mb-4">üß™ Experiment Table</h1>

  <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4">

    <!-- Trigger Panel -->
    <ExperimentPanel title="Trigger CI/CD">
      <div class="flex items-center space-x-2">
        <div id="statusLED" class="w-3 h-3 rounded-full bg-gray-700 shadow-md"></div>
        <button id="buildBtn" class="px-4 py-2 bg-lab-dim border border-lab-glow rounded shadow-glow hover:bg-lab-glow hover:text-black transition">Build Now</button>
      </div>

      <button id="dockerBuildBtn" class="mt-4 px-3 py-1 text-sm bg-slate-700 hover:bg-slate-600 text-white rounded">Trigger Docker Build üê≥</button>

      <div class="mt-6 space-y-2">
        <input id="imageTagInput" type="text" placeholder="Paste Docker image tag" class="px-3 py-1 text-sm rounded border border-slate-300 w-[260px]" />
        <button id="runContainerBtn" class="px-3 py-1 text-sm bg-indigo-600 hover:bg-indigo-500 text-white rounded">Start Container üöÄ</button>
      </div>

       <select id="containerSelect" class="mt-2 px-3 py-1 rounded border border-slate-300">
        <option disabled selected>Choose running container</option>
      </select>

      <div class="mt-4 space-y-2">
        <input id="imageStopInput" type="text" placeholder="Paste Docker image tag" class="px-3 py-1 text-sm rounded border border-slate-300 w-[260px]" />
        <button id="stopContainerBtn" class="px-3 py-1 text-sm bg-red-600 hover:bg-red-500 text-white rounded">Stop Container üõë</button>
      </div>

     
    </ExperimentPanel>

    <!-- Live Logs -->
    <ExperimentPanel title="Live Logs">
      <ul id="buildLog" class="text-sm font-mono space-y-1 mt-4">Loading...</ul>
      <button id="clearHistoryBtn" class="mt-2 px-3 py-1 text-xs bg-lab-dim border border-red-500 text-red-400 rounded hover:bg-red-500 hover:text-black transition">Clear History</button>
    </ExperimentPanel>

    <!-- Metrics -->
    <ExperimentPanel title="System Metrics">
      <p>CPU: 17% | Mem: 62%</p>
    </ExperimentPanel>

  </div>
</LabLayout>

<script is:inline type="module">
  async function triggerBuild() {
    const button = document.getElementById("buildBtn");
    const statusLED = document.getElementById("statusLED");
    button.textContent = "Building...";
    button.disabled = true;
    statusLED.className = "w-3 h-3 rounded-full bg-yellow-300 shadow-pulse";

    try {
      const res = await fetch("https://lab7-dashboard-production.up.railway.app/trigger/", { method: "POST" });
      const data = await res.json();
      const isSuccess = res.status === 204;
      statusLED.className = `w-3 h-3 rounded-full ${isSuccess ? "bg-green-400 shadow-glow" : "bg-red-400 shadow-pulse"}`;
      button.textContent = data.message || "Build triggered!";
    } catch (err) {
      console.error("‚ùå Build trigger failed:", err);
      button.textContent = "Error!";
      statusLED.className = "w-3 h-3 rounded-full bg-red-500 shadow-pulse";
    } finally {
      setTimeout(() => {
        button.textContent = "Build Now";
        button.disabled = false;
        statusLED.className = "w-3 h-3 rounded-full bg-gray-700 shadow-md";
      }, 3000);
      await loadBuildHistory();
    }
  }

  async function loadBuildHistory() {
    const list = document.getElementById("buildLog");
    list.innerHTML = "";

    try {
      const res = await fetch("https://lab7-dashboard-production.up.railway.app/trigger/history");
      const logs = await res.json();

      if (logs.length === 0) {
        list.innerHTML = "<li class='text-gray-500 text-sm'>No build history yet.</li>";
        return;
      }

      for (const log of logs.reverse()) {
        const icon = log.status === "success" ? "‚úÖ" : "‚ùå";
        const msgColor = log.status === "success" ? "text-green-400" : "text-red-400";
        const glow = log.status === "success" ? "shadow-glow" : "shadow-pulse";

        list.innerHTML += `
          <li class="text-gray-200 text-sm">
            <span class="font-mono text-xs text-gray-500">[${log.timestamp}]</span>
            <span class="${msgColor} font-semibold ${glow} animate-flicker ml-2">${icon} ${log.message}</span>
          </li>
        `;
      }
    } catch (err) {
      list.innerHTML = "<li class='text-red-400 text-sm'>Error loading logs.</li>";
      console.error("üî¥ Failed to fetch build history:", err);
    }
  }

  async function clearBuildHistory() {
    await fetch("https://lab7-dashboard-production.up.railway.app/trigger/history/clear", { method: "POST" });
    await loadBuildHistory();
  }

  async function loadRunningContainers() {
    const res = await fetch("https://lab7-dashboard-production.up.railway.app/trigger/docker/list/");
    const data = await res.json();
    const select = document.getElementById("containerSelect");
    if (!select || !data.containers) return;

    select.innerHTML = "<option disabled selected>Choose running container</option>";
    data.containers.forEach(c => {
      const opt = document.createElement("option");
      opt.value = c.image;
      opt.textContent = `${c.image} (${c.status})`;
      select.appendChild(opt);
    });
  }

  document.addEventListener("DOMContentLoaded", () => {
    document.getElementById("buildBtn").addEventListener("click", triggerBuild);

    document.getElementById("dockerBuildBtn").addEventListener("click", async () => {
      const btn = document.getElementById("dockerBuildBtn");
      btn.textContent = "Building...";
      btn.disabled = true;

      const res = await fetch("https://lab7-dashboard-production.up.railway.app/trigger/docker/", { method: "POST" });
      const data = await res.json();

      btn.textContent = "Trigger Docker Build üê≥";
      btn.disabled = false;

      await loadBuildHistory();
      await loadRunningContainers();
    });

    document.getElementById("runContainerBtn").addEventListener("click", async () => {
      const image = document.getElementById("imageTagInput").value.trim();
      const btn = document.getElementById("runContainerBtn");

      btn.textContent = "Starting...";
      btn.disabled = true;

      await fetch("https://lab7-dashboard-production.up.railway.app/trigger/docker/run/", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ image }),
      });

      btn.textContent = "Start Container üöÄ";
      btn.disabled = false;

      await loadBuildHistory();
      await loadRunningContainers();
    });

    document.getElementById("stopContainerBtn").addEventListener("click", async () => {
      const image = document.getElementById("imageStopInput").value.trim();
      const btn = document.getElementById("stopContainerBtn");

      btn.textContent = "Stopping...";
      btn.disabled = true;

      await fetch("https://lab7-dashboard-production.up.railway.app/trigger/docker/stop/", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ image }),
      });

      btn.textContent = "Stop Container üõë";
      btn.disabled = false;

      await loadBuildHistory();
      await loadRunningContainers();
    });

    document.getElementById("clearHistoryBtn").addEventListener("click", clearBuildHistory);

    loadBuildHistory();
    loadRunningContainers();
  });
</script>